# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-30 21:05
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import parler.models
import sorl.thumbnail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Advice',
                'verbose_name_plural': 'Advices',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AdvicesTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text', models.TextField(max_length=500, verbose_name='Advice')),
                ('customer', models.CharField(choices=[('clients', 'Clients'), ('travelers', 'Travelers')], max_length=10, verbose_name='Customer')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='MainViayou.Advices')),
            ],
            options={
                'managed': True,
                'db_table': 'MainViayou_advices_translation',
                'default_permissions': (),
                'verbose_name': 'Advice Translation',
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AnswersTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text', models.TextField(help_text='Text for the answer', max_length=500, verbose_name='Answer')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='MainViayou.Answers')),
            ],
            options={
                'managed': True,
                'db_table': 'MainViayou_answers_translation',
                'default_permissions': (),
                'verbose_name': 'Answer Translation',
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CategoriesTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='Name of the category', max_length=200, verbose_name='Name')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='MainViayou.Categories')),
            ],
            options={
                'managed': True,
                'db_table': 'MainViayou_categories_translation',
                'default_permissions': (),
                'verbose_name': 'Category Translation',
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Code of the city', max_length=10, verbose_name='Code')),
            ],
            options={
                'verbose_name': 'City',
                'ordering': ['translations__name'],
                'verbose_name_plural': 'Cities',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CitiesTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='Name of the country', max_length=50, verbose_name='Name')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='MainViayou.Cities')),
            ],
            options={
                'managed': True,
                'db_table': 'MainViayou_cities_translation',
                'default_permissions': (),
                'verbose_name': 'City Translation',
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='ContainedIn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Min')),
                ('max', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Max')),
                ('measure', models.CharField(choices=[('m', 'M'), ('dm', 'Dm'), ('cm', 'Cm'), ('mm', 'Mm')], max_length=3, verbose_name='Measure')),
            ],
            options={
                'verbose_name': 'ContainedIn',
                'verbose_name_plural': 'ContainedIn',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, help_text='Code of the country', max_length=10, null=True, verbose_name='Code')),
            ],
            options={
                'verbose_name': 'Country',
                'ordering': ['translations__name'],
                'verbose_name_plural': 'Countries',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CountriesTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(help_text='Name of the country', max_length=50, verbose_name='Name')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='MainViayou.Countries')),
            ],
            options={
                'managed': True,
                'db_table': 'MainViayou_countries_translation',
                'default_permissions': (),
                'verbose_name': 'Country Translation',
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='KeyWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook_img', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='/facebook', verbose_name='Facebook Image')),
                ('is_index', models.BooleanField(default=False, help_text='Check if the keyword belongs to the homepage', verbose_name='Is index?')),
                ('twitter_img', sorl.thumbnail.fields.ImageField(blank=True, null=True, upload_to='/twitter', verbose_name='Twitter Image')),
            ],
            options={
                'verbose_name': 'Keyword',
                'verbose_name_plural': 'Keywords',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='KeyWordTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('keywords', models.CharField(blank=True, help_text='keywords split by ,', max_length=200, null=True, verbose_name='Keywords')),
                ('description', models.CharField(blank=True, help_text='What goes inside the description metadata', max_length=400, null=True, verbose_name="Google's description")),
                ('facebook_msg', models.CharField(blank=True, help_text='What goes inside og:title metadata', max_length=300, null=True, verbose_name='Facebook message')),
                ('twitter_msg', models.CharField(blank=True, help_text='What goes inside twitter:title metadata', max_length=300, null=True, verbose_name='Twitter message')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='MainViayou.KeyWord')),
            ],
            options={
                'managed': True,
                'db_table': 'MainViayou_keyword_translation',
                'default_permissions': (),
                'verbose_name': 'Keyword Translation',
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='QuestionsTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text', models.TextField(help_text='Text for the question', max_length=500, verbose_name='Question')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='MainViayou.Questions')),
            ],
            options={
                'managed': True,
                'db_table': 'MainViayou_questions_translation',
                'default_permissions': (),
                'verbose_name': 'Question Translation',
                'db_tablespace': '',
            },
        ),
        migrations.CreateModel(
            name='Travels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(help_text="Travel's Date", verbose_name='Date')),
                ('grade', models.IntegerField(blank=True, help_text='Evaluation for the travel', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Grade')),
                ('origin_code', models.CharField(help_text='The origin of the travel, city code is saved', max_length=10, verbose_name='Origin')),
                ('destination_code', models.CharField(help_text='The destination of the travel, city code is saved', max_length=10, verbose_name='Destination')),
            ],
            options={
                'verbose_name': 'Travel',
                'ordering': ['date'],
                'verbose_name_plural': 'Travels',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users/%Y/%m/%d')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.AddField(
            model_name='travels',
            name='users',
            field=models.ManyToManyField(help_text='Users in the travel', related_name='travels', to='MainViayou.User', verbose_name='Users'),
        ),
        migrations.AddField(
            model_name='cities',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='MainViayou.Countries'),
        ),
        migrations.AddField(
            model_name='categories',
            name='travels',
            field=models.ManyToManyField(related_name='categories', to='MainViayou.Travels', verbose_name='Travels'),
        ),
        migrations.AddField(
            model_name='answers',
            name='question',
            field=models.ForeignKey(help_text='Question associated', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='MainViayou.Questions', verbose_name='Question'),
        ),
        migrations.AlterUniqueTogether(
            name='questionstranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='keywordtranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='countriestranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='citiestranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='categoriestranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='answerstranslation',
            unique_together=set([('language_code', 'master')]),
        ),
        migrations.AlterUniqueTogether(
            name='advicestranslation',
            unique_together=set([('language_code', 'master')]),
        ),
    ]
